1. CVS Super App passes token /sa/plan-document/v1/list on APIc03 GW
    <see eie_headers.md>
2. APIc03 GW performs the following
2.a. Deconstructs the token into EIE headers
    <see eie_headers.md>
2.b. Forwards the request with EIE headers to /sa/plan-document/v1/list on CVS BFF
3. CVS BFF service /sa/plan-document/v1/list orchestrates:
3.a. Runs the sequence to construct application_startup payload
3.a.1. Calls /v1/plangroups on Plan Groups server with EIE headers
3.a.1.A. /v1/plangroups on Plan Groups calls /application_startup on Core Proxy server with EIE headers
3.a.1.A.i. /application_startup on Core Proxy calls /at/application_startup on APIc01 GW with EIE headers
3.a.1.A.i.(1) /at/application_startup on APIc01 GW constructs the member's pre-load payload
3.a.1.A.i.(2) /at/application_startup on APIc01 GW returns the member pre-load payload in its response to /application_startup on Core Proxy
    <see application_startup_response.json>
3.a.1.A.ii. /application_startup on Core Proxy returns the member payload in its response to /v1/plangroups on Plan Groups
    <see application_startup_response.json>
3.a.1.B. /v1/plangroups on Plan Groups returns plangroups in its response to /sa/plan-document/v1/list on CVS BFF
    <see qa-master-plan-groups-service-url=plangroups-5-rows-datafied.json>
3.b. /sa/plan-document/v1/list loops through plan groups to retrieve features for document retrieval filtering
3.b.1. Loop through plan groups in /v1/plangroups payload
    FILTER: lineOfBusiness = 'Commercial'
    FILTER: policies[].memberships[].status = 'ActivelyCovered'
    NOTE: In this case effective date is unecessary because plan-documents is always asOf today so ActivelyCovered is all the flag we need.
3.b.2. This looping action constructs the request transfer object to get features from /v2/features on MMF Service
    <see v2_features_request_sample.json>
3.c Calls /v2/features on MMF Service with the constructed request
    <see v2_features_request_sample.json>
3.b.2.A. /v2/features on MMF Service retrieves the features from PostgresSQL and/or Redis
3.b.2.B. /v2/features on MMF Service returns the features in its payload
    <see v2_features_response_sample.json>
3.b.2.C. If 
3.c. /sa/plan-document/v1/list on CVS BFF constructs the document list
3.d.1. WHAT DOES IT DO HERE?????
3.b.2. Calls /plan-document-list/v1/retrieve on 
