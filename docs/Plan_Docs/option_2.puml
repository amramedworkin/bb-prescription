'================================================================================
' Option 2: Sequence Diagram
'================================================================================
@startuml
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v17.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/ApplicationIntegration/APIGateway.puml
!include AWSPuml/Compute/Lambda.puml

!unquoted procedure $actor($alias, $label, $sprite="aws-icons-for-plantuml/General/User.puml")
  actor ":$sprite:\n$label" as $alias
!endprocedure

!unquoted procedure $participant($alias, $label, $sprite="aws-icons-for-plantuml/General/General/Default.puml")
  participant ":$sprite:\n$label" as $alias
!endprocedure

title Option 2: App Startup Pre-fetch (Sequence Flow)

$actor(User, "User\non CVS SuperApp")
$participant(CVS_BFF, "CVS BFF")
$participant(AWS_APIGateway, "AWS API Gateway", $APIGATEWAY_SPRITE)
$participant(BenefitsService, "Benefits Service\n(AWS Lambda)", $LAMBDA_SPRITE)
database "Core API\n(Source of Truth)" as Core_API
database ClientCache as "Client-Side\nCache"

autonumber "<b>[0]"
== App Startup ==
User -> CVS_BFF: App Startup / Login Event
activate CVS_BFF
CVS_BFF -> AWS_APIGateway: Request Plan Doc List
activate AWS_APIGateway
AWS_APIGateway -> BenefitsService: Invoke Lambda
activate BenefitsService
BenefitsService -> Core_API: Get all relevant doc metadata
activate Core_API
Core_API --> BenefitsService: Return metadata
deactivate Core_API
BenefitsService --> AWS_APIGateway: Return list
deactivate BenefitsService
AWS_APIGateway --> CVS_BFF: Forward list
deactivate AWS_APIGateway
CVS_BFF --> User: Return pre-fetched list
deactivate CVS_BFF
User -> ClientCache: Store document list
...
== User Navigates to Plan Docs Page ==
User -> ClientCache: Request document list
activate ClientCache
ClientCache --> User: Return cached list instantly
deactivate ClientCache
@enduml

'================================================================================
' Option 2: Component Diagram
'================================================================================
@startuml
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v17.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Groups/AWSCloud.puml
!include AWSPuml/ApplicationIntegration/APIGateway.puml
!include AWSPuml/Compute/Lambda.puml

!unquoted procedure $actor($alias, $label, $sprite="aws-icons-for-plantuml/General/User.puml")
  actor ":$sprite:\n$label" as $alias
!endprocedure

title Option 2: App Startup Pre-fetch (Component View)

package "Client Tier" {
    $actor(User, "CVS SuperApp\nUser")
    database ClientCache as "Client-Side Cache"
}

package "BFF Tier" {
  component [CVS BFF]
}

$AWSCloud_Boundary(aws, "AWS Cloud (Existing)") {
    $APIGateway(api_gateway, "API Gateway", "Handles API requests")
    $Lambda(benefits_service, "Benefits Service", "Orchestrates data retrieval")
}

database "Core API" {
  [Source of Truth]
}

User --> [CVS BFF] : During App Startup
[CVS BFF] --> api_gateway
api_gateway --> benefits_service
benefits_service --> [Source of Truth]

User -> ClientCache : Reads/Writes
ClientCache -> User : Provides data
@enduml
