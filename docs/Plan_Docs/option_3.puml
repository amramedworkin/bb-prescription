'================================================================================
' Option 3: Sequence Diagram
'================================================================================
@startuml
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v17.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/ApplicationIntegration/APIGateway.puml
!include AWSPuml/Compute/Lambda.puml

!unquoted procedure $actor($alias, $label, $sprite="aws-icons-for-plantuml/General/User.puml")
  actor ":$sprite:\n$label" as $alias
!endprocedure

!unquoted procedure $participant($alias, $label, $sprite="aws-icons-for-plantuml/General/General/Default.puml")
  participant ":$sprite:\n$label" as $alias
!endprocedure

title Option 3: BFF-Centric Caching & Augmentation (Sequence Flow)

$actor(User, "User\non CVS SuperApp")
$participant(CVS_BFF, "CVS BFF\n(New Service)")
$participant(AWS_APIGateway, "AWS API Gateway", $APIGATEWAY_SPRITE)
$participant(BenefitsService, "Benefits Service\n(AWS Lambda)", $LAMBDA_SPRITE)
database "Core API\n(Source of Truth)" as Core_API
database BFF_Cache as "BFF-Internal\nCache/Store"
database Metadata_Service as "Metadata Augmentation\nService/DB"

autonumber "<b>[0]"
User -> CVS_BFF: GET /plan-documents/list
activate CVS_BFF

CVS_BFF -> BFF_Cache: Check for cached list
activate BFF_Cache

alt Cache Miss
    BFF_Cache --> CVS_BFF: Not found
    CVS_BFF -> AWS_APIGateway: POST /plan-document-list/retrieve
    activate AWS_APIGateway

    AWS_APIGateway -> BenefitsService: Invoke Lambda
    activate BenefitsService
    BenefitsService --> AWS_APIGateway: Return raw document list
    deactivate BenefitsService
    AWS_APIGateway --> CVS_BFF: Forward raw list
    deactivate AWS_APIGateway

    CVS_BFF -> Metadata_Service: Get additional metadata
    activate Metadata_Service
    Metadata_Service --> CVS_BFF: Return metadata
    deactivate Metadata_Service

    CVS_BFF -> CVS_BFF: Augment and Transform data
    CVS_BFF -> BFF_Cache: Store augmented list
else Cache Hit
    BFF_Cache --> CVS_BFF: Return cached list
end
deactivate BFF_Cache

CVS_BFF --> User: Return formatted document list
deactivate CVS_BFF
@enduml

'================================================================================
' Option 3: Component Diagram
'================================================================================
@startuml
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v17.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Groups/AWSCloud.puml
!include AWSPuml/ApplicationIntegration/APIGateway.puml
!include AWSPuml/Compute/Lambda.puml

!unquoted procedure $actor($alias, $label, $sprite="aws-icons-for-plantuml/General/User.puml")
  actor ":$sprite:\n$label" as $alias
!endprocedure

title Option 3: BFF-Centric Caching & Augmentation (Component View)

$actor(User, "CVS SuperApp\nUser")

package "New BFF Tier" {
  component [CVS BFF]
  database BFF_Cache as "BFF Cache"
}

$AWSCloud_Boundary(aws, "AWS Cloud (Existing)") {
    $APIGateway(api_gateway, "API Gateway", "Handles API requests")
    $Lambda(benefits_service, "Benefits Service", "Orchestrates data retrieval")
}

package "Supporting Services" {
    database Metadata_Service as "Metadata Augmentation\nService/DB"
}

database "Core API" {
  [Source of Truth]
}

User --> [CVS BFF]
[CVS BFF] <--> BFF_Cache
[CVS BFF] --> api_gateway : On Cache Miss
[CVS BFF] --> Metadata_Service : For Augmentation

api_gateway --> benefits_service
benefits_service --> [Source of Truth]
@enduml
